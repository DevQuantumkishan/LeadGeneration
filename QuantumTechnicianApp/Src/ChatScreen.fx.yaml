ChatScreen As screen:
    OnVisible: |-
        =UpdateContext({locInfoExpanded:false});
        Set(
            VarLeadMessages,
            true
        );
        If(Connection.Connected=false,Notify("Internet is not connected,please try again later.",NotificationType.Error),
        If(CountRows(Filter( glryChatCS.AllItems, LeadInformationLID.ID= VarLtdID && 'Read '='Read  (LeadChats)'.No && IsQQApp='IsQQApp (LeadChats)'.Yes))>0,
        ForAll(
            Filter( glryChatCS.AllItems, LeadInformationLID.ID= VarLtdID && 'Read '='Read  (LeadChats)'.No && IsQQApp='IsQQApp (LeadChats)'.Yes)As i,
        UpdateIf(
            LeadChats,
            ID=i.ID,
            {'Read ': true}
        )
        ));
        Refresh (LeadChats));
        UpdateContext({startTimerCS:false}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: true}) 

    ctnMainCS As groupContainer.verticalAutoLayoutContainer:
        Fill: =RGBA(237, 237, 237, 1)
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =10
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingLeft: =10
        PaddingRight: =10
        Width: =Parent.Width
        ZIndex: =1

        ctnHeaderCS As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            Height: =If(Parent.Height<Parent.Width,60,80)
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Width: =Parent.Width
            ZIndex: =1

            IconMenuCS As icon.Hamburger:
                Color: =RGBA(0, 0, 0, 1)
                Height: =Parent.Height
                Icon: =Icon.Hamburger
                OnSelect: =Set(varshowMenu,!varshowMenu)
                PaddingBottom: =Parent.Height/3
                PaddingTop: =Parent.Height/3
                Width: =Parent.Height/2
                X: =18
                Y: =11
                ZIndex: =1

            imgSchindlerLogoCS As image:
                DisplayMode: =DisplayMode.View
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Parent.Height
                Image: ='1x'
                LayoutMinHeight: =320
                LayoutMinWidth: =320
                PaddingBottom: =5
                PaddingTop: =0.00
                Width: =If(Parent.Width>Parent.Height,Parent.Width/10,Parent.Width/12)
                X: =0.00
                ZIndex: =2

            iconBackCS As icon.BackArrow:
                AlignInContainer: =AlignInContainer.Center
                Color: =RGBA(0, 0, 0, 1)
                Height: =Parent.Height/2
                Icon: =Icon.ChevronLeft
                OnSelect: |
                    =// for lead list expand 
                    UpdateContext({locInfoExpanded:true});
                    Back();
                    Set(VarLeadMessages,false);
                    //for timer 
                    UpdateContext({startTimerCS:false});
                    Refresh(LeadChats);
                PaddingBottom: =5
                PaddingTop: =5
                Width: =Parent.Height/2
                X: =18
                Y: =11
                ZIndex: =3

            lblHeaderCS As label:
                DisplayMode: =DisplayMode.View
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Height: =Parent.Height
                LayoutMinHeight: =70
                PaddingLeft: =20
                PaddingRight: =5.34
                PaddingTop: =5.34
                Size: |
                    =//21.36
                    If(Parent.Width<500,14,Parent.Width>500,20)
                Text: ="Technician Lead Generation"
                Width: =Parent.Width-imgSchindlerLogoCS.Width-IconMenuCS.Width-btnUsernameCS.Width-imgRefreshCS.Width-50
                X: =96.12
                ZIndex: =4

            imgRefreshCS As image:
                DisabledFill: =RGBA(255, 255, 255, 1)
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Parent.Height
                HoverFill: =Self.Fill
                Image: ='refresh new'
                OnSelect: |-
                    =// If connection connected, refresh LeadChats otherwise notify error.
                    
                    If(Connection.Connected=false,Notify("Internet is not connected,please try again later.",NotificationType.Error),
                    Refresh(LeadChats));
                PaddingBottom: =Parent.Height/3
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =Parent.Height/3
                PressedFill: =Self.Fill
                RadiusBottomLeft: =50
                RadiusBottomRight: =50
                RadiusTopLeft: =50
                RadiusTopRight: =50
                Visible: =If(Connection.Connected,true,false)
                Width: =50
                X: =ctnYearToggleDS.X+ctnYearToggleDS.Width
                Y: =Parent.Height/4
                ZIndex: =5

            btnUsernameCS As button:
                AlignInContainer: =AlignInContainer.Center
                BorderColor: =Color.Red
                Color: =RGBA(0, 0, 0, 1)
                DisabledBorderColor: =RGBA(255, 0, 0, 1)
                DisabledColor: =RGBA(0, 0, 0, 1)
                DisabledFill: =RGBA(0, 0, 0, 0)
                DisplayMode: =DisplayMode.Disabled
                Fill: =RGBA(0, 0, 0, 0)
                Font: =Font.Arial
                Height: =If(Parent.Width<500,Parent.Height/1.8,Parent.Height/1.6)
                RadiusBottomLeft: =50
                RadiusBottomRight: =50
                RadiusTopLeft: =50
                RadiusTopRight: =50
                Size: =If(Parent.Width<500,11,Parent.Width>500,12,12)
                Text: |-
                    =Left(User().FullName, 1) &
                    Mid(
                        User().FullName,
                        Find(" ", User().FullName) + 1,
                        1)
                Width: =If(Parent.Width<500,Parent.Height/1.8,Parent.Height/1.6)
                ZIndex: =6

        ctnLeadsDetailsCS As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(219, 219, 219, 1)
            BorderThickness: =2
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            Height: =If(VarLeadstatus="Quoted" || VarLeadstatus="Sold",120,100)
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            PaddingLeft: =10
            PaddingRight: =10
            RadiusBottomLeft: =10
            RadiusBottomRight: =10
            RadiusTopLeft: =10
            RadiusTopRight: =10
            Width: =Parent.Width-20
            X: =10
            Y: =85
            ZIndex: =2

            btnLeadsDetailsCS As button:
                Align: =Align.Right
                BorderColor: =RGBA(219, 219, 219, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisplayMode: =DisplayMode.View
                Fill: =RGBA(255, 255, 255, 1)
                Font: =Font.Arial
                Height: =Parent.Height
                PaddingLeft: =20
                PaddingRight: =20
                Size: =If(Parent.Width<500,12,Parent.Width>500,16)
                Text: =//"Building name" & Char(10) & VarLtdName
                Width: =Parent.Width
                ZIndex: =1

            lblTrackingNumberCS As label:
                AutoHeight: =true
                DisplayMode: =DisplayMode.View
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                PaddingLeft: =10
                PaddingRight: =5.34
                Size: |
                    =//21.36
                    If(Parent.Width<500,12,Parent.Width>500,16)
                Text: ="Tracking Number" & Char(10) & VarLtdTrackingnumber
                Width: =Parent.Width/2
                Y: =4
                ZIndex: =2

            lblBuildingNameCS As label:
                Align: =Align.Right
                AutoHeight: =true
                DisplayMode: =DisplayMode.View
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                PaddingLeft: =20
                PaddingRight: =10
                Size: |
                    =//21.36
                    If(Parent.Width<500,12,Parent.Width>500,16)
                Text: ="Building Name" & Char(10) & VarLtdName
                Width: =Parent.Width/1.5
                X: =Parent.Width/3
                Y: =4
                ZIndex: =3

            lblEstimateNumberCS As label:
                AutoHeight: =true
                DisplayMode: =DisplayMode.View
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                PaddingLeft: =10
                PaddingRight: =5.34
                Size: |
                    =//21.36
                    If(Parent.Width<500,12,Parent.Width>500,16)
                Text: ="Estimate Number" & Char(10) & VarEstimateNumber
                Visible: =If(VarLeadstatus="Quoted" || VarLeadstatus="Sold",true,false)
                Width: =Parent.Width/2
                Y: =lblTrackingNumberCS.Y+lblTrackingNumberCS.Height
                ZIndex: =4

        ctnMiddleCS As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =RGBA(255, 255, 255, 1)
            FillPortions: =0
            Height: =Parent.Height-ctnHeaderCS.Height-ctnLeadsDetailsCS.Height-40
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            PaddingLeft: =5
            PaddingRight: =5
            Width: =Parent.Width-20
            Y: =180
            ZIndex: =3

            glryChatCS As gallery.variableTemplateHeightGallery:
                DelayItemLoading: =true
                Fill: |-
                    =//RGBA(237,237,237,1) 
                    RGBA(0, 0, 0, 0)
                Height: =Parent.Height-intxtSendCS.Height
                Items: =Sort(Filter(LeadChats,LeadInformationLID.ID=VarLtdID),'Created On',SortOrder.Ascending)
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                OnSelect: =
                TemplateSize: =lblMessageCS.Height+lblDateCS.Height
                Width: =Parent.Width
                ZIndex: =3

                RectangleBorderCS As rectangle:
                    Fill: =If(ThisItem.IsQQApp=true,RGBA(237, 237, 237, 1),RGBA(255,255,255,1))
                    Height: =lblMessageCS.Height+lblDateCS.Height
                    OnSelect: =Select(Parent)
                    Width: =Parent.Width-30
                    X: =10
                    ZIndex: =1

                lblMessageCS As label:
                    Align: =If(ThisItem.IsQQApp=true,Align.Left,Align.Right)
                    AutoHeight: =true
                    Font: =Font.Arial
                    OnSelect: =Select(Parent)
                    PaddingLeft: =20
                    PaddingRight: =40
                    Size: =If(Parent.Width<500,14,Parent.Width>500,16)
                    Text: =ThisItem.Message
                    Width: =Parent.Width-btnshowFromNameCS.Width-btnshowFromNameCS.X
                    X: =btnshowFromNameCS.X+btnshowFromNameCS.Width
                    ZIndex: =2

                lblDateCS As label:
                    Align: =If(ThisItem.IsQQApp=true,Align.Left,Align.Right)
                    AutoHeight: =true
                    Color: =RGBA(149, 149, 149, 1)
                    Font: =Font.Arial
                    Height: =30
                    OnSelect: =Select(Parent)
                    PaddingLeft: =20
                    PaddingRight: =40
                    Size: =If(Parent.Width<500,9,Parent.Width>500,11)
                    Text: =DateValue(ThisItem.'Created On')  & " "& TimeValue(ThisItem.'Created On')
                    Width: =Parent.Width-btnshowFromNameCS.Width-btnshowFromNameCS.X
                    X: =btnshowFromNameCS.X+btnshowFromNameCS.Width
                    Y: =lblMessageCS.Y+lblMessageCS.Height
                    ZIndex: =3

                iconLineCS As rectangle:
                    Fill: =RGBA(102, 102, 102, 1)
                    Height: =3
                    Width: =Parent.Width-30
                    X: =10
                    Y: =lblDateCS.Height+lblDateCS.Y+5
                    ZIndex: =4

                btnshowFromNameCS As button:
                    BorderColor: =Color.Red
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(255, 0, 0, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(255, 255, 255, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =28
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =Self.Fill
                    OnSelect: |
                        =Set(VarUserName,ThisItem.FromName);
                        //(VartoolTip,ThisItem.FromName)
                        UpdateContext({VartoolTip:true});
                        Set(VarUsernameTimer,true);
                        //Set(varChatScreentimerPopup,true);
                        UpdateContext({startTimerCS:false}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: true}) 
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =Self.Color
                    PressedFill: =Self.Fill
                    RadiusBottomLeft: =50
                    RadiusBottomRight: =50
                    RadiusTopLeft: =50
                    RadiusTopRight: =50
                    Size: =If(Parent.Width<500,9,Parent.Width>500,10)
                    Text: |-
                        =Left(ThisItem.FromName, 1) &
                        Mid(
                            ThisItem.FromName,
                            Find(" ", ThisItem.FromName) + 1,
                            1)
                    Tooltip: =ThisItem.FromName
                    Visible: |-
                        =If(ThisItem.IsQQApp=true && !( ThisItem.IsSelected && VartoolTip)
                        ,true,false)
                    Width: =28
                    X: =15
                    Y: =15
                    ZIndex: =5

                btnhideFromNameCS As button:
                    BorderColor: =Color.Red
                    BorderThickness: =1
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledBorderColor: =RGBA(255, 0, 0, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(255, 255, 255, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =28
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =Self.Fill
                    OnSelect: |
                        =Set(VarUserName,ThisItem.FromName);
                        //(VartoolTip,ThisItem.FromName)
                        UpdateContext({VartoolTip:false});
                        Set(VarUsernameTimer,false);
                        //Set(varChatScreentimerPopup,true);
                        UpdateContext({startTimerCS:false}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: true}) 
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =Self.BorderColor
                    PressedColor: =Self.Color
                    PressedFill: =Self.Fill
                    RadiusBottomLeft: =50
                    RadiusBottomRight: =50
                    RadiusTopLeft: =50
                    RadiusTopRight: =50
                    Size: =If(Parent.Width<500,9,Parent.Width>500,10)
                    Text: |-
                        =Left(ThisItem.FromName, 1) &
                        Mid(
                            ThisItem.FromName,
                            Find(" ", ThisItem.FromName) + 1,
                            1)
                    Tooltip: =ThisItem.FromName
                    Visible: =If(ThisItem.IsQQApp=true && ThisItem.IsSelected && VartoolTip,true,false)
                    Width: =28
                    X: =15
                    Y: =15
                    ZIndex: =6

                lblfromnameCS As label:
                    AutoHeight: =true
                    BorderColor: =RGBA(255, 0, 0, 1)
                    BorderThickness: =1
                    Fill: =RGBA(255, 255, 255, 1)
                    Font: =Font.Arial
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =If(Parent.Width<500,9,Parent.Width>500,11)
                    Text: =ThisItem.FromName
                    Visible: =ThisItem.IsSelected && VartoolTip
                    Width: =If(Parent.Width>500,Parent.Width/5,Parent.Width/2.2)
                    X: =45
                    Y: =lblDateCS.Y
                    ZIndex: =7

            grpSendCS As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =4

                intxtSendCS As text:
                    BorderColor: =RGBA(220,0,0,1)
                    Default: =""
                    DisabledBorderColor: =RGBA(255, 0, 0, 1)
                    DisabledColor: =RGBA(0, 0, 0, 1)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =2
                    Font: =Font.Arial
                    Height: =If(Parent.Height<Parent.Width,50,70)
                    HintText: ="Enter message"
                    HoverBorderColor: =RGBA(255, 0, 0, 1)
                    HoverFill: =RGBA(0, 0, 0, 0)
                    Mode: =TextMode.MultiLine
                    OnChange: |-
                        =// for start timer. Timer is use for refreshing Leadschats dataverse Table
                        UpdateContext({startTimerCS:false}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: true}) 
                    PaddingLeft: =10
                    Size: =If(Parent.Width<500,12,Parent.Width>500,14)
                    Width: =Parent.Width-iconSendCS.Width-4
                    X: =2
                    Y: =glryChatCS.Height
                    ZIndex: =1

                iconSendCS As icon.Send:
                    BorderColor: =Self.Color
                    BorderThickness: =2
                    Color: =RGBA(220, 0, 0, 1)
                    DisabledBorderColor: =RGBA(255, 0, 0, 1)
                    DisabledColor: =RGBA(255, 0, 0, 1)
                    Height: =If(Parent.Height<Parent.Width,50,70)
                    Icon: =Icon.Send
                    OnSelect: |-
                        =//check connection is connected or not , If connection is not connected then notify error and  TextInput1_2.Text is blank then set VarNotification for showing error popup otherwise check is there any rows for unread message for respective LeadInformationId ,If yes then update read status.
                        // patch message to dataverse table LeadChats and refresh LeadChats and reset timer.
                        
                        If(Connection.Connected=false,Notify("Internet is not connected,please try again later.",NotificationType.Error),
                        If(IsBlank(intxtSendCS.Text),
                        
                             Set (VarNotification,true),
                             If(CountRows(Filter( glryChatCS.AllItems, LeadInformationLID.ID= VarLtdID && 'Read '='Read  (LeadChats)'.No && IsQQApp='IsQQApp (LeadChats)'.Yes))>0,
                        ForAll(
                            Filter( glryChatCS.AllItems, LeadInformationLID.ID= VarLtdID && 'Read '='Read  (LeadChats)'.No && IsQQApp='IsQQApp (LeadChats)'.Yes)As i,
                        UpdateIf(
                            LeadChats,
                            ID=i.ID,
                            {'Read ': true}
                        )
                        ));
                        
                        Patch(LeadChats,Defaults(LeadChats),
                                    {
                                        ID:GUID(),
                                        FromEmail:myMail,
                                     // To:personEmail,
                                        Message:intxtSendCS.Text,
                                        FromName:User().FullName,
                                        LeadInformationLID:LookUp(LeadInformations,ID=VarLtdID),
                                        'Read ':false
                                        
                                    }
                                ));
                        Refresh(LeadChats);
                        Reset(intxtSendCS));
                         
                        UpdateContext({startTimerCS:false}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: true}) 
                            
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Width: =If(Parent.Width<500,60,80)
                    X: =intxtSendCS.Width
                    Y: =glryChatCS.Height
                    ZIndex: =2

    TimermessageCS As timer:
        AutoPause: =false
        AutoStart: =true
        Duration: =3000
        FontWeight: =FontWeight.Lighter
        OnTimerEnd: =//Refresh(Filter(LeadChats,LeadInformationLID.ID=VarLtdID));
        Repeat: =true
        Start: |-
            =//VarLeadMessages
            false
        Visible: =false
        X: =40
        Y: =40
        ZIndex: =4

    grpMenuCS As group:
        Height: =5
        Width: =5
        X: =40
        Y: =80
        ZIndex: =4

        ctnBackgroundMenuCS As groupContainer.manualLayoutContainer:
            Fill: =RGBA(0, 0.19, 0.19, 0.19)
            Height: =Parent.Height-ctnHeaderDS.Height
            Visible: =varshowMenu
            Width: =Parent.Width
            Y: =ctnHeaderDS.Y+ctnHeaderDS.Height
            ZIndex: =2

        "glryMenuCS As gallery.'BrowseLayout_Vertical_OneTextOneImageVariant_ver4.0'":
            BorderColor: =RGBA(255, 255, 255, 1)
            BorderThickness: =1
            Fill: =RGBA(237, 237, 237, 1)
            Height: =1.08*(CountRows(glryMenuCS.AllItems)*(glryMenuCS.TemplateHeight))
            Items: =Menu
            Layout: =Layout.Vertical
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =90
            Visible: =varshowMenu
            Width: =Parent.Width/3.2
            X: =10
            Y: =ctnHeaderDS.Y+ctnHeaderDS.Height
            ZIndex: =3

            ctnMenuCS As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.ExtraBold
                Fill: =RGBA(255, 255, 255, 1)
                Height: =80
                Width: =Parent.Width/1.02
                ZIndex: =8

                lblMenuCS As label:
                    AutoHeight: =true
                    Color: =RGBA(169, 169, 169, 1)
                    Height: =24
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =If(Parent.Width<500,10,12)
                    Text: =ThisItem.Title
                    Width: =Parent.Width-iconMenuCS.Width-lineIndicatorCS.Width
                    X: =iconMenuCS.Width+iconMenuCS.X+10
                    Y: =30
                    ZIndex: =1

                iconMenuCS As icon.Add:
                    Color: =RGBA(169, 169, 169, 1)
                    Height: =Parent.Height/4.5
                    Icon: =ThisItem.icon
                    Width: =Parent.Width/4.5
                    X: =15
                    Y: =30
                    ZIndex: =3

                btnMenuCS As button:
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =80
                    HoverFill: =
                    OnSelect: |+
                        =Set(varshowMenu,!varshowMenu);Navigate(ThisItem.Navigate);
                        
                    PressedFill: =
                    Size: =24
                    Text: =""
                    Width: =Parent.Width
                    ZIndex: =4

                lineIndicatorCS As rectangle:
                    BorderColor: =RGBA(255, 0, 0, 1)
                    BorderThickness: =5
                    Fill: =RGBA(255, 0, 0, 1)
                    Height: =Parent.Height
                    Visible: =If(ThisItem.Navigate=DashboardScreen,true,false)
                    Width: =4
                    X: =1
                    ZIndex: =5

    PopopMandatoryCS As groupContainer.manualLayoutContainer:
        Fill: =RGBA(0, 0, 0, 0.29)
        Height: =Parent.Height
        Visible: =VarNotification
        Width: =Parent.Width
        ZIndex: =5

        borderPopopErrorCS As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: |
                =//If(Parent.Height<500,Parent.Height/1.5,Parent.Height/3)
                If(Parent.Width<500 || Parent.Height<500,260,Parent.Width>500 ,300)
            Width: =If(Parent.Width<1000,Parent.Width/1.2,Parent.Width/2)
            X: =(Parent.Width-Self.Width)/2
            Y: =(Parent.Height-Self.Height)/2
            ZIndex: =1

        ctnPopopMandatoryCS As groupContainer.verticalAutoLayoutContainer:
            BorderThickness: =1
            Height: =borderPopopErrorCS.Height
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            Width: =borderPopopErrorCS.Width
            X: =borderPopopErrorCS.X
            Y: =borderPopopErrorCS.Y
            ZIndex: =2

            ctnPopopMandatoryImageCS As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =If(Parent.Width<500,80,60)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =1

                imgPopopErrorCS As image:
                    Height: =Parent.Height
                    Image: =error
                    PaddingTop: =30
                    Width: =Parent.Width
                    ZIndex: =1

            lblPopopErrorCS As label:
                Align: =Align.Center
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =100
                Size: =14
                Text: ="Please enter message to send."
                Width: =Parent.Width
                ZIndex: =2

            btnPopopErrorCS As button:
                Fill: =RGBA(255, 0, 0, 1)
                Font: =Font.Arial
                HoverFill: =ColorFade(Self.Fill, -20%)
                OnSelect: |-
                    =Navigate(ChatScreen);
                    Set(VarNotification,false);
                    UpdateContext({startTimerCS:false}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: true}) ;
                Size: =14
                Text: ="Ok"
                Width: =Parent.Width/5
                ZIndex: =3

    TimerforDispayusername As timer:
        AutoStart: =true
        Duration: =2000
        OnTimerEnd: |-
            =// timer use for showing name of QQ team member 
            Set(VarUsernameTimer,false);UpdateContext({VartoolTip:false});//Set(varChatScreentimerPopup,true);
        Start: =VarUsernameTimer
        Visible: =false
        X: =60
        Y: =60
        ZIndex: =6

    PopopNotificationCS As groupContainer.manualLayoutContainer:
        Fill: =RGBA(0, 0, 0, 0.29)
        Height: =Parent.Height
        Visible: =VarchatInactivemode
        Width: =Parent.Width
        ZIndex: =8

        borderNotificationCS As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: |
                =//If(Parent.Height<500,Parent.Height/1.5,Parent.Height/3)
                If(Parent.Width<500 || Parent.Height<500,260,Parent.Width>500 ,300)
            Width: =If(Parent.Width<1000,Parent.Width/1.2,Parent.Width/2)
            X: =(Parent.Width-Self.Width)/2
            Y: =(Parent.Height-Self.Height)/2
            ZIndex: =1

        ctnNotificationCS As groupContainer.verticalAutoLayoutContainer:
            BorderThickness: =1
            Height: =borderNotificationCS.Height
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMode: =LayoutMode.Auto
            Width: =borderNotificationCS.Width
            X: =borderNotificationCS.X
            Y: =borderNotificationCS.Y
            ZIndex: =2

            ctnImageCS As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =If(Parent.Width<500,80,60)
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =1

                imgNotificationCS As image:
                    DisabledFill: =RGBA(255, 255, 255, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Parent.Height
                    Image: ='info 2'
                    PaddingTop: =30
                    Width: =Parent.Width
                    ZIndex: =1

            lblNotificationCS As label:
                Align: =Align.Center
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =100
                Size: =14
                Text: ="Do you really want to close this chat window?"
                Width: =Parent.Width
                ZIndex: =2

            ctnbuttonsNotificationCS As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =80
                LayoutGap: =20
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                ZIndex: =5

                btnBackCS As button:
                    Fill: =RGBA(255, 0, 0, 1)
                    Font: =Font.Arial
                    HoverFill: =ColorFade(Self.Fill, -20%)
                    OnSelect: |-
                        =//to close popup
                        Set(VarchatInactivemode,false);UpdateContext({startTimerCS:false}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: true}) 
                        //Navigate(ChatScreen);
                    Size: =14
                    Text: ="No"
                    Visible: =If(lblNotificationCS.Text="Submitting",false,true)
                    Width: =Parent.Width/5
                    ZIndex: =1

                btnOkCS As button:
                    Fill: =RGBA(255, 0, 0, 1)
                    Font: =Font.Arial
                    HoverFill: =ColorFade(Self.Fill, -20%)
                    OnSelect: |-
                        =//to close popup if time is out
                        Set(VarchatInactivemode,false);If(VarLeadstatus="Quoted" ||VarLeadstatus="Sold" ,Navigate(QuotedSOldLeads);,VarLeadstatus="Rejected",Navigate(RejectedLeads);,Navigate(SubmittedLeadScreen));UpdateContext({startTimerCS:true}); Reset(TimerInactiveModeCS); UpdateContext({startTimerCS: false}) 
                    Size: =14
                    Text: ="Yes"
                    Visible: =If(lblNotificationCS.Text="Submitting",false,true)
                    Width: =Parent.Width/5
                    ZIndex: =2

    TimerInactiveModeCS As timer:
        Duration: =120000
        OnTimerEnd: |-
            =Set(VarchatInactivemode,true);UpdateContext({startTimerCS:true});
        Start: =startTimerCS
        Visible: =false
        X: =100
        Y: =100
        ZIndex: =9

